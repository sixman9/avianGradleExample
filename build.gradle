version = '0.0.1'
group= 'com.fonotext'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'

apply plugin: 'avian'

//[project] Templates plugin
//See also 'http://www.tellurianring.com/projects/gradle-plugins/gradle-templates/apply.groovy'
apply from: 'https://raw.github.com/townsfolk/gradle-templates/master/installation/apply.groovy'

ext {
    avianPluginVersion = '0.1.0'
}

// Create a configuration define our dependencies
configurations {

}

buildscript {
	def avianPluginVersion = '0.1.0'

	repositories {
		mavenLocal()
		mavenCentral()
	}
	
	dependencies {
		classpath "com.readytalk:gradle-avian-plugin:$avianPluginVersion"
	}
}

repositories {
	mavenCentral()
	//mavenRepo url: "https://repository.jboss.org/nexus/content/groups/public"
}

// Define Ant task dependencies to the sshAntTask configuration.
dependencies {
	//compile "com.::$Version"
}

//Generate self-distributing Gradle wrapper - BTW, simple task definition
task('wrapper', type: Wrapper).configure {
    gradleVersion = '1.6'
}

//sdk version variable - used for IDE setup (later) 
def versionCompatibility = 1.6

//From the Eclipse plugin - manipulates the project file and classpath etc.
eclipse {
	project {
		comment = ""

		buildCommand "org.eclipse.jdt.core.javabuilder"

		natures "com.springsource.sts.grails.core.nature",
			"org.eclipse.jdt.groovy.core.groovyNature",
			"org.eclipse.jdt.core.javanature",
	        	"com.springsource.sts.gradle.core.nature"
	}

	classpath {
        	containers "com.springsource.sts.gradle.classpathcontainer"
	}
}

//From the idea plugin - manipulates the project file's XML etc.
idea {
	project {
        	jdkName = versionCompatibility

		ipr {
        		withXml { provider ->
            		def node = provider.asNode()
            		
            		// Use GIT
        		def vcsConfig = node.component.find { it.'@name' == 'VcsDirectoryMappings' }
        		vcsConfig.mapping[0].'@vcs' = 'Git'
			
            		// Set Gradle home
            		def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
            		gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir])
        		}
		}
	}
}